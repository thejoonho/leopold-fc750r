/**
 * Copyright (c) 2025 Joonho Jang
 * Copyright (c) 2023 Nordic Semiconductor ASA
 *
 * SPDX-License-Identifier: Apache-2.0
 */

#include <dt-bindings/regulator/npm1300.h>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <zephyr/dt-bindings/input/keymap.h>

#include <zephyr/dt-bindings/led/led.h>

&i2c0_default {
    group1 {
        bias-pull-up;
        psels = <NRF_PSEL(TWIM_SDA, 0, 4)>, <NRF_PSEL(TWIM_SCL, 0, 26)>;
    };
};

&arduino_i2c {
    npm1300_ek_pmic: pmic@6b {
        compatible = "nordic,npm1300";
        reg = <0x6b>;

        // ship-to-active-time = <96>;
        // long-press-reset = "one_button";

        npm1300_ek_gpio: gpio-controller {
            compatible = "nordic,npm1300-gpio";
            gpio-controller;
            #gpio-cells = <2>;
            ngpios = <5>;

        };

        npm1300_ek_regulators: regulators {
            compatible = "nordic,npm1300-regulator";

            npm1300_ek_buck1: BUCK1 {
                regulator-min-microvolt = <1000000>;
                regulator-max-microvolt = <3300000>;
                regulator-init-microvolt = <1800000>;
                retention-microvolt = <1500000>;

                retention-gpios = <&npm1300_ek_gpio 0 GPIO_ACTIVE_LOW>;
            };

            npm1300_ek_buck2: BUCK2 {
                regulator-min-microvolt = <1000000>;
                regulator-max-microvolt = <3300000>;
                regulator-init-microvolt = <1800000>;
                retention-microvolt = <1500000>;

            };

            npm1300_ek_ldo1: LDO1 {
                regulator-min-microvolt = <1000000>;
                regulator-max-microvolt = <3300000>;

                regulator-initial-mode = <NPM1300_LDSW_MODE_LDSW>;

            };

            npm1300_ek_ldo2: LDO2 {
                regulator-min-microvolt = <1000000>;
                regulator-max-microvolt = <3300000>;

                regulator-initial-mode = <NPM1300_LDSW_MODE_LDSW>;

            };
        };


        npm1300_ek_charger: charger {
            compatible = "nordic,npm1300-charger";
            term-microvolt = <4200000>;
            term-warm-microvolt = <3600000>;
            // term-current-percent = <10>;
            current-microamp = <800000>;
            // trickle-microvolt = <2500000>;
            dischg-limit-microamp = <1000000>;
            vbus-limit-microamp = <500000>;
            thermistor-ohms = <10000>;
            thermistor-beta = <3380>;
            // disable-recharge;
            charging-enable;

        };

        npm1300_ek_leds: leds {
            compatible = "nordic,npm1300-led";
            nordic,led0-mode = "error";
            nordic,led1-mode = "charging";
            nordic,led2-mode = "host";

        };
    };
};

&npm1300_ek_pmic {
    host-int-gpios = <&gpio0 5 0>;
    pmic-int-pin = <1>;

};

/{
    kbd {
        kbd-matrix {
            compatible = "gpio-kbd-matrix";

            row-gpios = <&gpio1 4 (GPIO_PULL_DOWN | GPIO_ACTIVE_HIGH)>,
                        <&gpio1 5 (GPIO_PULL_DOWN | GPIO_ACTIVE_HIGH)>,
                        <&gpio1 2 (GPIO_PULL_DOWN | GPIO_ACTIVE_HIGH)>,
                        <&gpio0 7 (GPIO_PULL_DOWN | GPIO_ACTIVE_HIGH)>,
                        <&gpio0 2 (GPIO_PULL_DOWN | GPIO_ACTIVE_HIGH)>,
                        <&gpio1 14 (GPIO_PULL_DOWN | GPIO_ACTIVE_HIGH)>;

            col-gpios = <&gpio0 3 GPIO_ACTIVE_HIGH>,
                        <&gpio0 29 GPIO_ACTIVE_HIGH>,
                        <&gpio0 28 GPIO_ACTIVE_HIGH>,
                        <&gpio0 31 GPIO_ACTIVE_HIGH>,
                        <&gpio0 30 GPIO_ACTIVE_HIGH>,
                        <&gpio1 8 GPIO_ACTIVE_HIGH>,
                        <&gpio0 11 GPIO_ACTIVE_HIGH>,
                        <&gpio0 6 GPIO_ACTIVE_HIGH>,
                        <&gpio0 8 GPIO_ACTIVE_HIGH>,
                        <&gpio1 9 GPIO_ACTIVE_HIGH>,
                        <&gpio0 12 GPIO_ACTIVE_HIGH>,
                        <&gpio0 14 GPIO_ACTIVE_HIGH>,
                        <&gpio0 16 GPIO_ACTIVE_HIGH>,
                        <&gpio0 13 GPIO_ACTIVE_HIGH>,
                        <&gpio0 15 GPIO_ACTIVE_HIGH>,
                        <&gpio1 3 GPIO_ACTIVE_HIGH>,
                        <&gpio1 7 GPIO_ACTIVE_HIGH>,
                        <&gpio1 6 GPIO_ACTIVE_HIGH>;

            keymap {
                compatible = "input-keymap";
                // MATRIX_KEY(row, col, INPUT_KEY) - Index 0
                keymap = <

                MATRIX_KEY(0, 0, INPUT_KEY_ESC)
                MATRIX_KEY(0, 2, INPUT_KEY_F1)
                MATRIX_KEY(0, 3, INPUT_KEY_F2)
                MATRIX_KEY(0, 4, INPUT_KEY_F3)
                MATRIX_KEY(0, 5, INPUT_KEY_F4)
                MATRIX_KEY(0, 7, INPUT_KEY_F5)
                MATRIX_KEY(0, 8, INPUT_KEY_F6)
                MATRIX_KEY(0, 9, INPUT_KEY_F7)
                MATRIX_KEY(0, 10, INPUT_KEY_8)
                MATRIX_KEY(0, 11, INPUT_KEY_F9)
                MATRIX_KEY(0, 12, INPUT_KEY_F10)
                MATRIX_KEY(0, 13, INPUT_KEY_F11)
                MATRIX_KEY(0, 14, INPUT_KEY_F12)
                MATRIX_KEY(0, 15, INPUT_KEY_PRINT)
                MATRIX_KEY(0, 16, INPUT_KEY_SCROLLLOCK)
                MATRIX_KEY(0, 17, INPUT_KEY_PAUSE)

                MATRIX_KEY(1, 0, INPUT_KEY_GRAVE)
                MATRIX_KEY(1, 1, INPUT_KEY_1)
                MATRIX_KEY(1, 2, INPUT_KEY_2)
                MATRIX_KEY(1, 3, INPUT_KEY_3)
                MATRIX_KEY(1, 4, INPUT_KEY_4)
                MATRIX_KEY(1, 5, INPUT_KEY_5)
                MATRIX_KEY(1, 6, INPUT_KEY_6)
                MATRIX_KEY(1, 7, INPUT_KEY_7)
                MATRIX_KEY(1, 8, INPUT_KEY_8)
                MATRIX_KEY(1, 9, INPUT_KEY_9)
                MATRIX_KEY(1, 10, INPUT_KEY_0)
                MATRIX_KEY(1, 11, INPUT_KEY_MINUS)
                MATRIX_KEY(1, 12, INPUT_KEY_EQUAL)
                MATRIX_KEY(1, 13, INPUT_KEY_BACKSPACE)
                MATRIX_KEY(1, 15, INPUT_KEY_INSERT)
                MATRIX_KEY(1, 16, INPUT_KEY_HOME)
                MATRIX_KEY(1, 17, INPUT_KEY_PAGEUP)

                MATRIX_KEY(2, 0, INPUT_KEY_TAB)
                MATRIX_KEY(2, 1, INPUT_KEY_Q)
                MATRIX_KEY(2, 2, INPUT_KEY_W)
                MATRIX_KEY(2, 3, INPUT_KEY_E)
                MATRIX_KEY(2, 4, INPUT_KEY_R)
                MATRIX_KEY(2, 5, INPUT_KEY_T)
                MATRIX_KEY(2, 6, INPUT_KEY_Y)
                MATRIX_KEY(2, 7, INPUT_KEY_U)
                MATRIX_KEY(2, 8, INPUT_KEY_I)
                MATRIX_KEY(2, 9, INPUT_KEY_O)
                MATRIX_KEY(2, 10, INPUT_KEY_P)
                MATRIX_KEY(2, 11, INPUT_KEY_LEFTBRACE)
                MATRIX_KEY(2, 12, INPUT_KEY_RIGHTBRACE)
                MATRIX_KEY(2, 13, INPUT_KEY_BACKSLASH)
                MATRIX_KEY(2, 15, INPUT_KEY_DELETE)
                MATRIX_KEY(2, 16, INPUT_KEY_END)
                MATRIX_KEY(2, 17, INPUT_KEY_PAGEDOWN)

                MATRIX_KEY(3, 0, INPUT_KEY_CAPSLOCK)
                MATRIX_KEY(3, 1, INPUT_KEY_A)
                MATRIX_KEY(3, 2, INPUT_KEY_S)
                MATRIX_KEY(3, 3, INPUT_KEY_D)
                MATRIX_KEY(3, 4, INPUT_KEY_F)
                MATRIX_KEY(3, 5, INPUT_KEY_G)
                MATRIX_KEY(3, 6, INPUT_KEY_H)
                MATRIX_KEY(3, 7, INPUT_KEY_J)
                MATRIX_KEY(3, 8, INPUT_KEY_K)
                MATRIX_KEY(3, 9, INPUT_KEY_L)
                MATRIX_KEY(3, 10, INPUT_KEY_SEMICOLON)
                MATRIX_KEY(3, 11, INPUT_KEY_APOSTROPHE)
                MATRIX_KEY(3, 13, INPUT_KEY_ENTER)

                MATRIX_KEY(4, 0, INPUT_KEY_LEFTSHIFT)
                MATRIX_KEY(4, 1, INPUT_KEY_Z)
                MATRIX_KEY(4, 2, INPUT_KEY_X)
                MATRIX_KEY(4, 3, INPUT_KEY_C)
                MATRIX_KEY(4, 4, INPUT_KEY_V)
                MATRIX_KEY(4, 5, INPUT_KEY_B)
                MATRIX_KEY(4, 6, INPUT_KEY_N)
                MATRIX_KEY(4, 7, INPUT_KEY_M)
                MATRIX_KEY(4, 8, INPUT_KEY_COMMA)
                MATRIX_KEY(4, 9, INPUT_KEY_DOT)
                MATRIX_KEY(4, 10, INPUT_KEY_SLASH)
                MATRIX_KEY(4, 13, INPUT_KEY_RIGHTSHIFT)
                MATRIX_KEY(4, 16, INPUT_KEY_UP)

                MATRIX_KEY(5, 0, INPUT_KEY_LEFTCTRL)
                MATRIX_KEY(5, 1, INPUT_KEY_LEFTMETA)
                MATRIX_KEY(5, 2, INPUT_KEY_LEFTALT)
                MATRIX_KEY(5, 3, INPUT_KEY_SPACE)
                MATRIX_KEY(5, 8, INPUT_KEY_RIGHTALT)
                // MATRIX_KEY(5, 9, INPUT_KEY_FN)
                MATRIX_KEY(5, 10, INPUT_KEY_MENU)
                MATRIX_KEY(5, 13, INPUT_KEY_RIGHTCTRL)
                MATRIX_KEY(5, 15, INPUT_KEY_LEFT)
                MATRIX_KEY(5, 16, INPUT_KEY_DOWN)
                MATRIX_KEY(5, 17, INPUT_KEY_RIGHT)
                >;

                // Index 1
                row-size = <6>;
                col-size = <18>;
            };

            col-drive-inactive;
            settle-time-us = <0>;
            no-ghostkey-check;

        };
    };

    // Delete from DeviceTree Extension Alias Folder
    aliases {
        /delete-property/ led0;
        /delete-property/ led1;
        /delete-property/ led2;
        /delete-property/ led3;

        /delete-property/ sw0;
        /delete-property/ sw1;
        /delete-property/ sw2;
        /delete-property/ sw3;

        /delete-property/ bootloader-led0;
        /delete-property/ mcuboot-button0;
        /delete-property/ mcuboot-led0;
        /delete-property/ pwm-led0;
    };
};

/ {
    hid_dev_0: hid_dev_0 {
        compatible = "zephyr,hid-device";
        label = "HID0";
        protocol-code = "keyboard";
        in-report-size = <64>;
        in-polling-period-us = <1000>;
        out-report-size = <64>;
        out-polling-period-us = <16000>;

        // Alternative Options
        // in-report-size = <256>;
        // in-polling-period-us = <1000>;
        // out-report-size = <128>;
        // out-polling-period-us = <16000>;
    };
};

/ {
    dip_sw {
        compatible = "gpio-keys"; // Placeholder for my own dts/bindings/dip-sw
        dipsw2: dipsw_2 {
            gpios = <&gpio0 23 (GPIO_PULL_DOWN | GPIO_ACTIVE_HIGH)>;
            label = "Dip Switch 2";
            zephyr,code = <INPUT_BTN_2>;
        };
        // Disabling DIP SW3 and DIP SW4
        // dipsw3: dipsw_3 {
            //     gpios = <&gpio0 21 (GPIO_PULL_DOWN | GPIO_ACTIVE_HIGH)>;
            //     label = "Dip Switch 3";
            //     zephyr,code = <INPUT_BTN_3>;
        // };
        // dipsw4: dipsw_4 {
            //     gpios = <&gpio0 19 (GPIO_PULL_DOWN | GPIO_ACTIVE_HIGH)>;
            //     label = "Dip Switch 4";
            //     zephyr,code = <INPUT_BTN_4>;
        // };
    };
};


&pinctrl {
    i2s0_default_alt: i2s0_default_alt {
        group1 {
            psels = <NRF_PSEL(I2S_SCK_M, 1, 15)>,
                    <NRF_PSEL(I2S_LRCK_M, 1, 12)>,
                    <NRF_PSEL(I2S_SDOUT, 0, 27)>,
                    <NRF_PSEL(I2S_SDIN, 1, 13)>;
        };
    };
};

&i2c0_sleep {
    group1 {
        psels = <NRF_PSEL(TWIM_SDA, 0, 26)>, <NRF_PSEL(TWIM_SCL, 0, 17)>;
    };
};


i2s_led: &i2s0 {
    status = "okay";
    pinctrl-0 = <&i2s0_default_alt>;
    pinctrl-names = "default";

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-i2s";

        reg = <0>;
        chain-length = <87>; /* arbitrary; change at will */
        color-mapping = <LED_COLOR_ID_GREEN
        LED_COLOR_ID_RED
        LED_COLOR_ID_BLUE>;
        // out-active-low;
        reset-delay = <120>;
    };
};

/ {
    aliases {
        led-strip = &led_strip;
    };
};

// Delete from DeviceTree Extension Nodes Folder
/delete-node/ &led0;
/delete-node/ &led1;
/delete-node/ &led2;
/delete-node/ &led3;
/delete-node/ &{/leds/};

/delete-node/ &button0;
/delete-node/ &button1;
/delete-node/ &button2;
/delete-node/ &button3;
/delete-node/ &{/buttons/};

&clock {
    status = "okay";
};

&usbd {
    status = "okay";
};

&spi1 {
    status = "disabled";
};

&qspi {
    status = "disabled";
};

&spi3 {
    status = "disabled";
};

&uart0 {
    status = "disabled";
};

&pwm0 {
    status = "disabled";
};

&arduino_adc {
    io-channel-map = <0 &adc 1>, <1 &adc 2>, <2 &adc 4>, <3 &adc 5>, <4 &adc 6>, <5 &adc 7>;
};
